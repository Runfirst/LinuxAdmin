#rsyslog: rocket-fast system for log

#Linux log files should be easy to decipher since they're sotred in text form under the /var/log directory and subdirectory. They cover all kinds of things, like system, kernel, package manager, MySQL and more.
#Most directories can be grouped under four headings:
    >Application Logs
    >Event Logs 
    >Service Logs
    >System Logs 


#Linux Log Storage:
  >/var/log/syslog or /var/log/messages: Shows general messages and info regarding the system. Basically a data log of all activity throughout the globall system. Know that everything that happens on Redhat-based systems, like CentOS or Rhel, will go in messages. Whereas for Ubuntu and other Debian systems, they go in Syslog;

  >/var/log/auth.log or /var/log/secure: Keep authentication logs for both successful or failed logins, and authentication processes. Storage depends on system type. For Debian/Ubuntu, look in /var/log/auth.log; for Rhel/CentOS, go to /var/log/secure.

  >/var/log/boot.log: Start-up messages and boot info.

  >/var/log/maillog or /var/log/mail.log: is for mail server logs, handy for postfix, smtpd, or email-related services info running on your server.

  >/var/log/kern: Keeps in Kernel logs and warning info. Also useful to fix problems with custom kernels.

  >/var/log/dmesg: a repository for device driver messages. Use dmesg to see messages in this file.
  
  >/var/log/faillog: records info on failed logins. Hence, handy for examining potential security breaches like login credential hacks and brute-force attachs.

  >/var/log/corn: Keeps a record of Crond-related messages (cron jobs). Like when the corn daemon started a job.

  >/var/log/daemon.log: Keeps track of running background services but doesment represent them graphically.

  >/var/log/btmp: Keeps a note of all failed login attempts.

  >/var/log/utmp: current login state by user.

  >/var/log/wtmp: record of each login/logout.

  >/var/log/lastlog: holds every user's last login. A binary file you can read via lastlog command.


#The format of the log file consists of the following 4 columns:
  >the time the event occurred
  >the hostname of the server that generated the enent.
  >the name of the service or program that generated the event.
  >event specific information.

#Log format example:
$vim /var/log/secure 
Jun 5 03：20：46 localhost sshd[1630]：Accepted password for root from 192.168.0.104 port 4229 ssh2

Jun 5 03：20：46 localhost sshd[1630]：pam_unix(sshd：session)：session opened for user root by (uid=0)

Jun 5 03：25：04 localhost useradd[1661]：new group：name=bb， GID=501

Jun 5 03：25：04 localhost useradd[1661]：new user：name=bb， UID=501， GID=501， home=/home/bb， shell=/bin/bash

Jun 5 03：25：09 localhost passwd：pam_unix(passwd：chauthtok)：password changed for bb


#rsyslog parameter:
  >facility: auth (authentication-related logs), authpriv (authorization-related logs), cron (scheduled task-related logs), daemon (system service-related logs), ftp (ftp service-related logs), kern (kernel-related logs), lpr (print-related logs), mail (mail-related logs), news (news-related logs), security (security related logs), user (user late), uucp (file copy related logs), local0-local7 (custom related ).
  >priority: from low to high, debug (debugging), info (message), notice (attention), warm (warning), err (error error), crit(critical serious warning), alert (requires immediate modification information), emerg (panic kernel crash, Kernel panic and other serious ).
  >Program environment: package:rsyslog, main program:/usr/sbin/rsyslogd, main configure file: /etc/rsyslog.conf, /etc/rsyslodg.d./*configure; Library files: /lib64/rsyslog/*.so

  >Configuration file format: consists of three parts
    MODULES:related module configuration 
    GLOBAL DIRECTIVES: global configuration 
    RULES: Lgoging related rule settings

#rsyslog rules configuration format: facility.priority; facility.priority; ... target
  >facility:
    *: all facilities
    facility1, facility2, facility3,...:  list of specified facilities 
  >priority:
    *: Indicates all levels
    none: no level 
    priority: this level and all levels above this level 
    =priority: this level only
  >target:
    File path: usually in /var/log/,"-" before the file path means asynchronous writing
    user: Notify the specified user of the log event by sending the infomation to the terminal of the user logged into the system for display; * indicates all logged-in user
    Log server: @host, send the log to the specified remote server for recording; host: indicates the address of the log server, which listens to port 514 of the tcp or udp protocol by default to provide services
    Pipeline: |command, forwarded to other commands for processing
  >other logs:
    /var/log/wtmp: The log of the current system's successful login system needs to be viewed with the last command
    /var/log/btmp: The log of the failure of the current system to log in to the system needs to be viewed with the lastb command.
    /var/log/dmesg: log information during the system boot process; you can also use the dmesg command to view it.
    lastlog: displays the last log-in time of all users on the current system.


#Separates the sshd log to /var/log/sshd.log
#sshd logs are recorded in the /var/log/secure file. Now we will separate the sshd logs to /var/log/sshd.log. 

  >Step1. check the configuration file of sshd 
    $grep "log" /etc/ssh/sshd_config
    #SyslogFacility AUTH 
    SyslogFacility AUTHPRIV 
  #check the configuration file of rsyslog 
    $grep "authpriv" /etc/rsyslog.conf 
    *.info; mail.none; authpriv.none; corn.none       /var/log/messages 
    #The authpriv file has restricted access.
    authpriv.*                                        /var/log/secure 

  >Step2. change the sshd configuration file to change the log's facility to a custom facility local3
    $grep "log" /etc/ssh/sshd_config
    #SyslogFacility AUTH
    #SyslogFacility AUTHPRIV 
    SyslogFacility local3

  >Step3. In the rsyslog configuration file specify the target file at any level in the local3 facility as /var/log/sshd.log 
  $grep "local" /etc/rsyslog.conf 
  #Turn off message reception via local log socket;
  #local messages are retrieved through imjournal now.
  local7.*                                      /var/log/boot.log
  local3.*                                      /var/log/sshd.log 

  >Step4. restart rsyslogd and sshd services 
  $systemctl restart rsyslog sshd 
  #View /var/log/sshd.log 
  $ll /var/log/sshd.log 

  $cat /var/log/sshd.log 



#Log management widget
#journalctl: use journalctl to view all logs (kernel logs and application logs) with one command. The log configuration file /etc/systemd/journald.conf 
  >1. View all logs (by default, only the logs of this startup are saved)
  $journalctl
  -- Logs begin at 一 2019-12-23 12:42:48 CST, end at 二 2019-12-24 20:01:01 CST. --
  12月 23 12:42:48 docker systemd-journal[105]: Runtime journal is using 8.0M (max allowed 91.3M, trying to leave 136.9
  12月 23 12:42:48 docker kernel: Initializing cgroup subsys cpuset
  12月 23 12:42:48 docker kernel: Initializing cgroup subsys cpu
  12月 23 12:42:48 docker kernel: Initializing cgroup subsys cpuacct
  12月 23 12:42:48 docker kernel: Linux version 3.10.0-957.27.2.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc ve
  12月 23 12:42:48 docker kernel: Command line: BOOT_IMAGE=/vmlinuz-3.10.0-957.27.2.el7.x86_64 root=/dev/mapper/centos-
  12月 23 12:42:48 docker kernel: Disabled fast string operations

  >2.View kernel logs (don't display application logs)
  $journalctl -k 
  -- Logs begin at 一 2019-12-23 12:42:48 CST, end at 二 2019-12-24 20:01:01 CST. --
  12月 23 12:42:48 docker kernel: Initializing cgroup subsys cpuset
  12月 23 12:42:48 docker kernel: Initializing cgroup subsys cpu
  12月 23 12:42:48 docker kernel: Initializing cgroup subsys cpuacct
  12月 23 12:42:48 docker kernel: Linux version 3.10.0-957.27.2.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc ve
  12月 23 12:42:48 docker kernel: Command line: BOOT_IMAGE=/vmlinuz-3.10.0-957.27.2.el7.x86_64 root=/dev/mapper/centos-
  12月 23 12:42:48 docker kernel: Disabled fast string operations
   
  >3. View the log of the system startup this time 
  $journalctl -b 0

  >4. View the log of the specified time 
    $journalctl --since="2017-10-30 18:10：30"
    $journalctl --since="20 min ago"
    $journalctl --since=yesterday
    $journalctl --since "2017-01-10" --until "2017-01-11 03:00"
    $journalctl --since 09:00 --until "1 hour ago" 
    


